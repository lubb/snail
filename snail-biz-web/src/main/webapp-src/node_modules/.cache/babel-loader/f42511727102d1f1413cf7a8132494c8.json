{"remainingRequest":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/node_modules/babel-loader/lib/index.js!/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/src/utils/request.js","dependencies":[{"path":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/src/utils/request.js","mtime":1567395530498},{"path":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nvar service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  baseURL: 'http://localhost:8088',\n  timeout: 5000\n});\nservice.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject();\n});\nservice.interceptors.response.use(function (response) {\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    Promise.reject();\n  }\n}, function (error) {\n  return Promise.reject();\n});\nexport default service;",{"version":3,"sources":["/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/src/utils/request.js"],"names":["axios","service","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","status","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE,uBAFgB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAAb,CAAhB;AAMAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAkC,UAAAC,MAAM,EAAI;AACxC,SAAOA,MAAP;AACH,CAFD,EAEG,UAAAC,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,EAAP;AACH,CAJD;AAMAV,OAAO,CAACI,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CAAkC,UAAAK,QAAQ,EAAI;AAC1C,MAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvB,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAFD,MAEK;AACDJ,IAAAA,OAAO,CAACC,MAAR;AACH;AACJ,CAND,EAMG,UAAAF,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,EAAP;AACH,CARD;AAUA,eAAeV,OAAf","sourcesContent":["import axios from 'axios';\n\nconst service = axios.create({\n    // process.env.NODE_ENV === 'development' 来判断是否开发环境\n    baseURL: 'http://localhost:8088',\n    timeout: 5000\n})\n\nservice.interceptors.request.use( config => {\n    return config;\n}, error => {\n    return Promise.reject();\n})\n\nservice.interceptors.response.use(response => {\n    if(response.status === 200){\n        return response.data;\n    }else{\n        Promise.reject();\n    }\n}, error => {\n    return Promise.reject();\n})\n\nexport default service;\n"]}]}