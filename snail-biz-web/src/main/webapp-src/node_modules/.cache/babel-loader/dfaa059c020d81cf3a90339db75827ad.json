{"remainingRequest":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/node_modules/babel-loader/lib/index.js!/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/src/common/dateFormat.js","dependencies":[{"path":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/src/common/dateFormat.js","mtime":1560735107000},{"path":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport function Format(fmt) {\n  var o = {\n    \"M+\": this.getMonth() + 1,\n    //月份\n    \"d+\": this.getDate(),\n    //日\n    \"h+\": this.getHours(),\n    //小时\n    \"m+\": this.getMinutes(),\n    //分\n    \"s+\": this.getSeconds(),\n    //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3),\n    //季度\n    \"S\": this.getMilliseconds() //毫秒\n\n  };\n  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n  }\n\n  return fmt;\n}\nexport function parseDate(dateStr, fmt) {\n  if (!dateStr || !fmt) {\n    throw new Error(\"转换时间时发生错误,时间字符串与格式字符串不匹配!\");\n  } //排除特殊字符,避免正则发生错误\n\n\n  fmt = fmt.replace(/([\\^\\$\\.\\*\\+\\T\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}])/ig, \"\\\\$1\");\n  dateStr = dateStr.replace(/([\\^\\$\\.\\*\\+\\T\\?\\=\\!\\|\\\\\\/\\(\\)\\[\\]\\{\\}])/ig, \" \");\n\n  function getReg(str) {\n    var cfmt = fmt;\n    cfmt = cfmt.replace(new RegExp(str + \"+\", \"g\"), function (full) {\n      return \"(\" + full + \")\";\n    }) || \"\";\n    return cfmt.replace(/[yMdhmsS]/g, \"\\\\d\");\n  }\n\n  var year = parseInt(new RegExp(getReg(\"y\")).exec(dateStr)[1]) || 0;\n  var month = parseInt(new RegExp(getReg(\"M\")).exec(dateStr)[1]) - 1 || 0;\n  var day = parseInt(new RegExp(getReg(\"d\")).exec(dateStr)[1]) || 0;\n  var hour = parseInt(new RegExp(getReg(\"h\")).exec(dateStr)[1]) || 0;\n  var minute = parseInt(new RegExp(getReg(\"m\")).exec(dateStr)[1]) || 0;\n  var second = parseInt(new RegExp(getReg(\"s\")).exec(dateStr)[1]) || 0;\n  return new Date(year, month, day, hour, minute, second);\n}",{"version":3,"sources":["/Users/xinwis/Desktop/demo space/snail/snail-biz-web/src/main/webapp-src/src/common/dateFormat.js"],"names":["Format","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","parseDate","dateStr","Error","getReg","str","cfmt","full","year","parseInt","exec","month","day","hour","minute","second","Date"],"mappings":"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","sourcesContent":["export function Format(fmt){\n  var o = {\n    \"M+\": this.getMonth() + 1, //月份\n    \"d+\": this.getDate(), //日\n    \"h+\": this.getHours(), //小时\n    \"m+\": this.getMinutes(), //分\n    \"s+\": this.getSeconds(), //秒\n    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n    \"S\": this.getMilliseconds() //毫秒\n  };\n  if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n  return fmt;\n}\n\n\nexport function parseDate(dateStr,fmt){\n  if(!dateStr || !fmt ) {\n    throw new Error(\"转换时间时发生错误,时间字符串与格式字符串不匹配!\");\n  }\n  //排除特殊字符,避免正则发生错误\n  fmt = fmt.replace(/([\\^\\$\\.\\*\\+\\T\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}])/ig,\"\\\\$1\");\n  dateStr = dateStr.replace(/([\\^\\$\\.\\*\\+\\T\\?\\=\\!\\|\\\\\\/\\(\\)\\[\\]\\{\\}])/ig,\" \");\n  function getReg(str){\n    var cfmt = fmt;\n    cfmt = cfmt.replace(new RegExp(str+\"+\",\"g\"),function(full){ return \"(\"+full+\")\";}) || \"\";\n    return cfmt.replace(/[yMdhmsS]/g,\"\\\\d\");\n  }\n  var year   = parseInt((new RegExp(getReg(\"y\")).exec(dateStr)[1])) || 0;\n  var month  = parseInt((new RegExp(getReg(\"M\")).exec(dateStr)[1])) - 1 || 0;\n  var day    = parseInt((new RegExp(getReg(\"d\")).exec(dateStr)[1])) || 0;\n  var hour   = parseInt((new RegExp(getReg(\"h\")).exec(dateStr)[1])) || 0;\n  var minute = parseInt((new RegExp(getReg(\"m\")).exec(dateStr)[1])) || 0;\n  var second = parseInt((new RegExp(getReg(\"s\")).exec(dateStr)[1])) || 0;\n\n  return new Date(year,month,day,hour,minute,second);\n}\n"]}]}